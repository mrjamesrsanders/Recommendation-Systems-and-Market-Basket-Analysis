install.packages(arules, dependencies = TRUE)
install.packages("arules", dependencies = TRUE)
install.packages("arulesViz", dependencies = TRUE)
read.transactions("desktop/ElectronindexTransactions2017.csv", format = "basket", sep=",", rm.duplicates=TRUE)
"arules"
library(DBI)
library(dplyr)
library(arules)
library(arulesViz)
read.transactions("/Users/jamessanders/Desktop/ElectronindexTransactions2017.csv", format = "basket", sep=",", rm.duplicates=TRUE)
read.transactions("/Users/jamessanders/Downloads/ElectronindexTransactions2017.csv", format = "basket", sep=",", rm.duplicates=TRUE)
library(dataset)
install.packages("dataset", dependencies = TRUE)
transactions<- read.transactions("ElectronindexTransactions2017.csv", format = "basket", sep=",", rm.duplicates=TRUE)
read.transactions("/Users/jamessanders/Desktop/ET2017.csv", format = "basket", sep=",", rm.duplicates=TRUE)
transactions<-read.transactions("/Users/jamessanders/Desktop/ET2017.csv", format = "basket", sep=",", rm.duplicates=TRUE)
inspect(head(transactions,4))
length(transactions)
size(transactions)
LIST(transactions)
itemLabels(transactions)
itemFrequencyPlot(transactions)
par("mar")
par(mar=c(1,1,1,1))
itemFrequencyPlot(transactions)
itemFrequencyPlot(transactions, topN= 20)
image(transactions)
image(sample(transactions, 1000))
par("mar")
par(mar=c(5.1, 4.1,4.1,2.1))
image(sample(transactions, 1000))
RulesName<- apriori (transactions, parameter = list(supp = 0.1, conf = 0.8))
inspect(RulesName)
RulesName<- apriori (transactions, parameter = list(supp = 0.05, conf = 0.6))
inspect(RulesName)
RulesName<- apriori (transactions, parameter = list(supp = 0.05, conf = 0.4))
RulesName<- apriori (transactions, parameter = list(supp = 0.01, conf = 0.25))
inspect(RulesName)
> RulesName<- apriori (transactions, parameter = list(supp = 0.01, conf = 0.35))
RulesName<- apriori (transactions, parameter = list(supp = 0.01, conf = 0.35))
RulesName<- apriori (transactions, parameter = list(supp = 0.02, conf = 0.35))
inspect(RulesName)
summary(RulesName)
inspect(RulesName)
inspect(sort( RulesName, by = "lift"))
ItemRules <- subset(RulesName, items %in% "iMac")
ItemRules
summary(ItemRules)
is.redundant(RulesNames)
is.redundant(RulesName)
plot(RulesName[25], method="graph", control=list(type="items"))
install.packages(farver)
plot(RulesName[1:# of rules you want to plot], method="graph", control=list(type="items"))
install.packages('farver')
plot(RulesName[1:# of rules you want to plot], method="graph", control=list(type="items"))
install.packages('farver')
library(farver)
plot(RulesName[25], method="graph", control=list(type="items"))
install.packages('labeling', dependencies = TRUE)
library(labeling)
plot(RulesName[25], method="graph", control=list(type="items"))
data?
data
itemFrequencyPlot(transactions, topN=20, type="absolute",horiz=TRUE)
RulesName<- apriori (transactions, parameter = list(supp = 0.001, conf = 0.8))
RulesName<- apriori (transactions, parameter = list(supp = 0.001, conf = 0.95))
RulesName<- apriori (transactions, parameter = list(supp = 0.001, conf = 0.95, minlen=2, maxlen=4))
inspect((RulesName))
plot(RulesName[10], method="graph", control=list(type="items"))
plot(RulesName[1], method="graph", control=list(type="items"))
plot(RulesName[2], method="graph", control=list(type="items"))
plot(RulesName[15], method="graph", control=list(type="items"))
savehistory("~/Desktop/Course 3 taks 4 history.Rhistory")
